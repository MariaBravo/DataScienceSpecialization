setwd("C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(housingData)
names(housingData)
strsplit(names(housingData), "wgtp")
splitdata <- strsplit(names(housingData), "wgtp")
splitdata[123]
splitdata
names(housingData)
names(housingData)
zz <- file("GDPW4.csv", "rb")
readChar(zz,c(119))
endLine <- "\n"
line <- vector("character", 190)
for(i in 1:190)
{
readC <- " "
while (readC != endLine)
{
readC <- readChar(zz,c(1))
if ((readC == '\\') | (readC == '\r'))
{
##print("B")
}
else
{
line[i] <- paste(line[i], readC, sep="")
}
}
print(line[i])
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
list1
list2
list3
list4
list5
mean(list5)
mean(as.numeric(list5))
list2
list1
list2
list3
list4
countryNames <- list4
grep("*United",countryNames), 5
grep("*United",countryNames)
grep("^United",countryNames)
source('~/.active-rstudio-document')
zz <- file("EduW4.csv", "rb")
readChar(zz,c(668))
endLine <- "\n"
line <- vector("character", 235)
for(i in 1:235)
{
readC <- " "
while (readC != endLine)
{
readC <- readChar(zz,c(1))
if ((readC == '\\') | (readC == '\r'))
{
##print("B")
}
else
{
line[i] <- paste(line[i], readC, sep="")
}
}
##print(line[i])
}
zz <- file("EduW4.csv", "rb")
readChar(zz,c(668))
endLine <- "\n"
line <- vector("character", 235)
for(i in 1:235)
{
readC <- " "
while (readC != endLine)
{
readC <- readChar(zz,c(1))
if ((readC == '\\') | (readC == '\r'))
{
##print("B")
}
else
{
line[i] <- paste(line[i], readC, sep="")
}
}
print(i)
##print(line[i])
}
zz <- file("EduW4.csv", "rb")
readChar(zz,c(668))
endLine <- "\n"
line <- vector("character", 234)
for(i in 1:235)
{
readC <- " "
while (readC != endLine)
{
readC <- readChar(zz,c(1))
if ((readC == '\\') | (readC == '\r'))
{
##print("B")
}
else
{
line[i] <- paste(line[i], readC, sep="")
}
}
print(line[i])
}
zz <- file("EduW4.csv", "rb")
readChar(zz,c(668))
endLine <- "\n"
line <- vector("character", 234)
for(i in 1:234)
{
readC <- " "
while (readC != endLine)
{
readC <- readChar(zz,c(1))
if ((readC == '\\') | (readC == '\r'))
{
##print("B")
}
else
{
line[i] <- paste(line[i], readC, sep="")
}
}
print(line[i])
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(DTedu)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
listF
DTEdu
DTedu
source('~/.active-rstudio-document')
View(DTedu)
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/reading GDP week 4.R')
source('~/.active-rstudio-document')
View(DTedu)
View(DTgdp)
grep("^Fiscal year end",DTedu$V10)
vectorFound <- grep("^Fiscal year end",DTedu$V10)
DTedu[vectorFound]
DTedu[vectorFound, V10]
FiscalYear <- DTedu[vectorFound, V10]
FiscalYear
vectorFound <- grep("^Fiscal year end: June",DTedu$V10)
vectorFound
DTedu[vectorFound, V10]
dat1 <- merge(DTgdp, DTedu, by.x="V1", by.y="V1", all=FALSE)
View(dat1)
vectorFound <- grep("^Fiscal year end: June",dat1$V10)
dat1[vectorFound, V10]
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
names(amzn)
col.names(amzn)
col.name(amzn)
row.name(amzn)
row.names(amzn)
row.name(amzn)
names(amzn)
row.names(amzn)
amz[row.names]
amzn[row.names]
quantmod
examples(quantmod)
example(quantmod)
class(amzn)
DTamzn <- data.table(amzn)
DTamzn <- data.frame(amzn)
View(DTamzn)
row.names(DTamzn)
grep("^2012",DTamzn$row.names)
grep("^2012",row.names(DTamzn))
foundDates <- grep("^2012",row.names(DTamzn))
DTamzn[foundDates]
DTamzn[,foundDates]
DTamzn[foundDates,]
DTamzn[foundDates,1]
DTamzn[foundDates,row.names]
row.names(DTamzn[foundDates])
row.names(DTamzn[foundDates],)
DTamzn[foundDates,]
DT1 <- DTamzn[foundDates,]
DT1 <- row.names(DT1)
DT1
names(DT1)
names(DT1) <- date
names(DT1) <- "Date"
weekdays(DT1$Date)
weekdays(DT1)
DT1$Date
weekdays(DT1)
weekdays(as.date(DT1))
weekdays(as.numeric(DT1))
class(DT1)
DT1 <- as.numeric(DT1)
DT1 <- DTamzn[foundDates,]
View(DT1)
row.names(DT1)
listDates <- row.names(DT1)
as.Date(listDates)
listDates <- as.Date(listDates)
listDates
weekdays(listDates)
sum(weekdays(listDates)=="Monday")
